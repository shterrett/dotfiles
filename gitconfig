[init]
  templatedir = ~/.git_template
[push]
  default = simple
[color]
  ui = auto
[alias]
  aa = add --all
  ap = add --patch
  branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
  ca = commit --amend -v
  ci = commit -v
  co = checkout
  co-pr = !sh -c 'git fetch origin pull/$1/head:pr/$1 && git checkout pr/$1' -
  create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
  ctags = "!sh -c '[ -f .git/hooks/ctags ] || git init; .git/hooks/ctags' git-ctags"
  current-branch = !sh -c 'git rev-parse --abbrev-ref HEAD' -
  delete-branch = !sh -c 'git push origin :refs/heads/$1 && git branch -D $1' -
  merge-branch = !git checkout master && git merge @{-1}
  pr = !hub pull-request
  rename-branch = !sh -c 'old=$(git current-branch) && git branch -m $old $1 && git push origin --set-upstream $1 && git push origin --delete $old' -
  st = status --short --branch
  up = !git fetch origin && git rebase origin/master
  fdiff = diff --name-status
  graph = log --all --decorate --oneline --graph
  recent = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
  br = for-each-ref --sort=committerdate refs/heads/ --format='%(color: red)%(committerdate:short) %(color: cyan)%(refname:short)'
[core]
  excludesfile = ~/.gitignore
  autocrlf = input
  pager = delta --theme="\"Solarized (light)\""
[merge]
  ff = only
  conflictstyle = diff3
[commit]
  template = ~/.gitmessage
[fetch]
  prune = true
[user]
  name = Stuart Terrett
  email = shterrett@gmail.com
[format]
  pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset
[include]
  path = ~/.gitconfig.local
